{"version":3,"file":"static/js/700.087322cc.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,4CAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,6BAAgCC,IAD9B,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CACLC,GAFgD,EAAhBA,GAGhCC,MAHgD,EAAZA,MAKvC,KAPwB,2CAAH,qDAUXC,EAAY,mCAAG,WAAMC,GAAN,uFACHV,EAAAA,EAAAA,IAAA,uBACLC,EADK,kBACYS,EADZ,2BADG,cACpBP,EADoB,yBAInBA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CACLC,GAFgD,EAAhBA,GAGhCC,MAHgD,EAAZA,MAKvC,KATyB,2CAAH,sDAYZG,EAAe,mCAAG,WAAMC,GAAN,uFACNZ,EAAAA,EAAAA,IAAA,iBACXY,GADW,OACDX,EADC,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfS,EAAe,mCAAG,WAAMC,GAAN,uFACNd,EAAAA,EAAAA,IAAA,iBACXc,EADW,mBACQb,EADR,oBADM,cACvBE,EADuB,yBAKtBA,EAASC,KAAKW,KAAKT,KAAI,YAC5B,MAAO,CACLU,KAFqE,EAAxCA,KAG7BC,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9CX,GALqE,EAATA,GAO/D,KAZ4B,2CAAH,sDAefY,EAAgB,mCAAG,WAAML,GAAN,uFACPd,EAAAA,EAAAA,IAAA,iBACXc,EADW,mBACQb,EADR,2BADO,cACxBE,EADwB,yBAIvBA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CACLc,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxCd,GAJ0D,EAATA,GAMpD,KAV6B,2CAAH,qD,oFC/ChBe,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,wBACGF,EAAOjB,KAAI,SAAAoB,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAMnB,IAAMqB,MAAO,CAAEC,KAAML,GAAhD,SACGE,EAAMlB,SAFFkB,EAAMnB,GADA,OAUxB,C,4HCZYuB,EAAa,WACxB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeS,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAeA,OAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAaH,EAAaI,IAAI,SAChCD,GACFE,EAAAA,GAAiBF,GAAYG,MAAK,SAAAC,GAAG,OAAIT,EAAUS,EAAd,GAExC,GAAE,CAACP,KAGF,4BACE,kBAAMQ,SAfW,SAAAC,GACnBR,EAAgB,CAAES,MAAOD,EAAEE,OAAO,GAAGC,QACrCH,EAAEI,gBAEH,EAWG,WACE,kBAAOC,KAAK,OAAOC,YAAY,eAC/B,mBAAQD,KAAK,SAAb,SAAsB,eAExB,SAAC1B,EAAA,EAAD,CAAcC,OAAQA,MAG3B,ECzBD,EAJe,WACb,OAAO,SAACO,EAAD,GACR,C","sources":["components/Api/apiMoviedb.js","components/TrendingList/TrendingList.jsx","components/SearchForm/SearchForm.jsx","components/pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=11517d6931d2b5137dd13eb45c72b984';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nexport const TrendingList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport * as API from 'components/Api/apiMoviedb';\nimport { useEffect, useState } from 'react';\nimport { TrendingList } from 'components/TrendingList/TrendingList';\n\nexport const SearchForm = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSubmit = e => {\n    setSearchParams({ query: e.target[0].value });\n    e.preventDefault();\n    return;\n  };\n\n  useEffect(() => {\n    const movieTitle = searchParams.get('query');\n    if (movieTitle) {\n      API.searchMovies(movieTitle).then(ret => setMovies(ret));\n    }\n  }, [searchParams]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Search...\"></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      <TrendingList movies={movies} />\n    </div>\n  );\n};\n","import { SearchForm } from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  return <SearchForm />;\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","getTrending","response","data","results","map","id","title","searchMovies","inputValue","getMovieDetails","movieId","getMovieCredits","moviesId","cast","name","character","profile_path","getMoviesReviews","author","content","TrendingList","movies","location","useLocation","movie","to","state","from","SearchForm","useState","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","movieTitle","get","API","then","ret","onSubmit","e","query","target","value","preventDefault","type","placeholder"],"sourceRoot":""}